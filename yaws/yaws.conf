
# conf for yaws


# first we have a set of globals
# That apply to all virtual servers


# This is the directory where all logfiles for
# all virtual servers will be written

logdir = "C:\Users\Magnus\tmp\logs"

# This the path to a directory where additional
# beam code can be placed. The daemon will add this
# directory to its search path

ebin_dir = "C:\Users\Magnus\tmp\ebin"


# This is a directory where application specific .hrl
# files can be placed. application specifig .yaws code can
# then include these .hrl files

include_dir = "C:\Users\Magnus\tmp\include"





# This is a debug variable, possible values are http | traffic | false
# It is also possible to set the trace (possibly to the tty) while
# invoking yaws from the shell as in
# yaws -i -T -x (see man yaws)

trace = false





# it is possible to have yaws start additional 
# application specific code at startup
# 
# runmod = mymodule


# By default yaws will copy the erlang error_log and
# end write it to a wrap log called report.log (in the logdir)
# this feature can be turned off. This would typically
# be the case when yaws runs within another larger app

copy_error_log = true


# Logs are wrap logs

log_wrap_size = 1000000


# Possibly resolve all hostnames in logfiles so webalizer
# can produce the nice geography piechart

log_resolve_hostname = false



# fail completely or not if yaws fails 
# to bind a listen socket
fail_on_bind_err = true




# If HTTP auth is used, it is possible to have a specific
# auth log.

auth_log = true


# When we're running multiple yaws systems on the same 
# host, we need to give each yaws system an individual
# name. Yaws will write a number of runtime files under
# ${HOME}/.yaws/yaws/${id}
# The default value is "default"


# id = myname


# earlier versions of Yaws picked the first virtual host
# in a list of hosts with the same IP/PORT when the Host:
# header doesn't match any name on any Host
# This is often nice in testing environments but not
# acceptable in real live hosting scenarios

pick_first_virthost_on_nomatch = true


<server localhost>
        port = 8080
        listen = 0.0.0.0
        docroot = "C:\Users\Magnus\tmp"
        appmods = <cgi-bin, yaws_appmod_cgi>        
</server>


# And then no ssl server, it seems as if the old ssl server
# isn't working on on win32, and the new one is still unuseable.
                                
        






